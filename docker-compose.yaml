services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ecommerce-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_ecommerce
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - '2181:2181'
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_ecommerce
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 29092:29092
    networks:
      - ecommerce-network

  product-query:
    image: product-query
    container_name: product-query
    environment:
      - MONGODB_URI=mongodb://test:testPWD@mongodb:27017/ecommerce
    depends_on:
      - mongodb
    expose:
      - 3000
    ports:
      - 3001:3000
    networks:
      - ecommerce-network

volumes:
  mongo-data:
    external: true

networks:
  ecommerce-network:
    external: true